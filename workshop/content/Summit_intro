= Vulnerability Management in Kubernetes with Red Hat Advanced Cluster Security

== Goal of the Workshop

This 30-minute session aims to get accustomed to identifying vulnerabilities in Kubernetes using the ACS dashboard. The session will discuss what makes particular vulnerabilities different and how to effectively implement controls in a Kubernetes cluster.

This workshop will focus on the log4shell export. However, multiple applications will be deployed in this use case. If you have time in the end, please explore the interface to see if you can find more security features that may help your use cases.

== Red Hat Advanced Cluster Security for Kubernetes Basics

Red Hat Advanced Cluster Security for Kubernetes (Red Hat Advanced Cluster Security or ACS for short) provides the tools and capabilities to address the security needs of a cloud-native development approach on Kubernetes.

The ACS solution offers visibility into the security of your cluster, vulnerability management, and security compliance through auditing, network segmentation awareness and configuration, security risk profiling, security-related configuration management, threat detection, and incident response. In addition, ACS grants an ability to pull the actions from that tooling deep into the application code development process through APIs.

These security features represent any developer or administrator's primary work as they work across various environments, including multiple datacenters, private clouds, or public clouds that run Kubernetes clusters.

=== ACS Features

Using Red Hat Advanced Cluster Security for Kubernetes, you can gain comprehensive Kubernetes security that includes the following use cases:

* Visibility: See your entire landscape of images, registries, containers, deployments, and runtime behavior.
* Vulnerability Management: Identify and remediate vulnerabilities in container images and Kubernetes across the entire software development life cycle.
* Compliance: Audit your systems against CIS Benchmarks, NIST, PCI, and HIPAA, with interactive dashboards and one-click audit reports.
* Network Segmentation: Visualize existing connections and enforce tighter segmentation using Kubernetes-native controls to reduce your blast radius.
* Risk Profiling: See all your deployments ranked by risk level, using context from Kubernetes' declarative data, to prioritize remediation.
* Configuration Management: Apply best practices for Docker and Kubernetes to harden your environment for a more secure and stable application.
* Threat Detection: Use rules, automated allow lists, and baselining to identify suspicious activity in your running applications accurately.
Incident Response: Take action, from failing builds and blocking deployments to killing pods and thwarting attacks, using Kubernetes for enforcement.

=== ACS Architecture

The ACS Platform installs as a set of pods in your Kubernetes or OpenShift cluster and includes the following components:

image::images/summit_intro.png[]
